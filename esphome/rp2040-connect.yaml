esphome:
  name: rp2040-connect
  platformio_options:
    board_build.flash_mode: dio
    board_build.f_flash: 20000000L
    board_build.flash_size: 4MB
  includes:
    - LambdaSwitch.h
    - LambdaNumber.h
    - LCCUart.h
    - esp-protocol.h

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:
  baud_rate: 0

uart:
  id: uart_bus
  tx_pin: 1
  rx_pin: 3
  baud_rate: 115200
  debug:
    direction: BOTH
    dummy_receiver: false
    after:
      delimiter: "\n"
    sequence:
      - lambda: UARTDebug::log_hex(direction, bytes, ' ');

sensor:
  - platform: wifi_signal # Reports the WiFi signal strength/RSSI in dB
    name: "WiFi Signal dB"
    id: wifi_signal_db
    update_interval: 60s
    entity_category: "diagnostic"

switch:

binary_sensor:

custom_component:
  - lambda: |-
      LCCUart *lcc = new LCCUart(id(uart_bus));
      App.register_sensor(lcc->brewTemperatureSensor);
      App.register_sensor(lcc->serviceTemperatureSensor);
      App.register_switch(lcc->ecoModeSwitch);
      App.register_switch(lcc->sleepSwitch);
      App.register_number(lcc->brewTemperatureSetPoint);
      App.register_number(lcc->serviceTemperatureSetPoint);
      App.register_number(lcc->brewTemperatureOffset);
      App.register_binary_sensor(lcc->waterTankLowSensor);
      App.register_binary_sensor(lcc->currentlyBrewingSensor);
      App.register_binary_sensor(lcc->currentlyFillingServiceBoilerSensor);
      return std::vector<esphome::Component*>{lcc};

number:

text_sensor:

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_key

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Rp2040-Connect Fallback Hotspot"
    password: "ZdlFMCnft8Hc"

captive_portal:

web_server:
  port: 80

# Example configuration entry
light:
  - platform: rgb
    name: "On Board RGB LED"
    red: output_component_r
    green: output_component_g
    blue: output_component_b
    restore_mode: ALWAYS_ON

# Example output entry
output:
  - platform: ledc
    id: output_component_r
    pin: GPIO27
    inverted: true
  - platform: ledc
    id: output_component_g
    pin: GPIO25
    inverted: true
  - platform: ledc
    id: output_component_b
    pin: GPIO26
    inverted: true